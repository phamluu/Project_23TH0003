// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLHocPhan_23TH0003.Data;

#nullable disable

namespace QLHocPhan_23TH0003.Data.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.BaiHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLopHocPhan")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaiLieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBaiHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLopHocPhan");

                    b.ToTable("BaiHoc", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.CauHinhHeThong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GiaTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaCauHinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCauHinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CauHinhHeThong", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.DangKyHocPhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdLopHocPhan")
                        .HasColumnType("int");

                    b.Property<int>("IdSinhVien")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLopHocPhan");

                    b.HasIndex("IdSinhVien");

                    b.ToTable("DangKyHocPhan", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Diem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("DiemChuyenCan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiemCuoiKy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiemGiuaKy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiemThucHanh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiemTrungBinh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdDangKyHocPhan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("XepLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDangKyHocPhan")
                        .IsUnique();

                    b.ToTable("Diem", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.GiangVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdKhoa")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaGiangVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdKhoa");

                    b.ToTable("GiangVien", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.HocKy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaHocKy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHocKy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HocKy", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.HocPhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdHocKy")
                        .HasColumnType("int");

                    b.Property<int>("IdMonHoc")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaHocPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenHocPhan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdHocKy");

                    b.HasIndex("IdMonHoc");

                    b.ToTable("HocPhan", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Khoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdTruongKhoa")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTruongKhoa")
                        .IsUnique()
                        .HasFilter("[IdTruongKhoa] IS NOT NULL");

                    b.ToTable("Khoa", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Lop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdKhoa")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdKhoa");

                    b.ToTable("Lop", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.LopHocPhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaDiemHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HeSoChuyenCan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeSoCuoiKy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeSoGiuaKy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeSoThucHanh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdHocPhan")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaLopHocPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiSoToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TenLopHocPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdHocPhan");

                    b.ToTable("LopHocPhan", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.MonHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdKhoa")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdKhoa");

                    b.ToTable("MonHoc", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.PhanCongGiangDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGiangVien")
                        .HasColumnType("int");

                    b.Property<int>("IdLopHocPhan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhanCong")
                        .HasColumnType("datetime2");

                    b.Property<int>("VaiTro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGiangVien");

                    b.HasIndex("IdLopHocPhan");

                    b.ToTable("PhanCongGiangDay", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.SinhVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HinhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdLop")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaSinhVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLop");

                    b.ToTable("SinhVien", (string)null);
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.ThanhToanHocPhi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HocKyId")
                        .HasColumnType("int");

                    b.Property<int>("IdHocKy")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("IdSinhVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhuongThuc")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HocKyId");

                    b.HasIndex("IdSinhVien");

                    b.ToTable("ThanhToanHocPhi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.BaiHoc", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.LopHocPhan", "LopHocPhan")
                        .WithMany("BaiHocs")
                        .HasForeignKey("IdLopHocPhan")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LopHocPhan");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.DangKyHocPhan", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.LopHocPhan", "LopHocPhan")
                        .WithMany("DangKyHocPhans")
                        .HasForeignKey("IdLopHocPhan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLHocPhan_23TH0003.Models.SinhVien", "SinhVien")
                        .WithMany("DangKyHocPhans")
                        .HasForeignKey("IdSinhVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LopHocPhan");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Diem", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.DangKyHocPhan", "DangKyHocPhan")
                        .WithOne("Diem")
                        .HasForeignKey("QLHocPhan_23TH0003.Models.Diem", "IdDangKyHocPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangKyHocPhan");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.GiangVien", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.Khoa", "Khoa")
                        .WithMany("GiangViens")
                        .HasForeignKey("IdKhoa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.HocPhan", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.HocKy", "HocKy")
                        .WithMany("HocPhans")
                        .HasForeignKey("IdHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLHocPhan_23TH0003.Models.MonHoc", "MonHoc")
                        .WithMany("HocPhans")
                        .HasForeignKey("IdMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocKy");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Khoa", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.GiangVien", "TruongKhoa")
                        .WithOne()
                        .HasForeignKey("QLHocPhan_23TH0003.Models.Khoa", "IdTruongKhoa");

                    b.Navigation("TruongKhoa");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Lop", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.Khoa", "Khoa")
                        .WithMany("Lops")
                        .HasForeignKey("IdKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.LopHocPhan", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.HocPhan", "HocPhan")
                        .WithMany("LopHocPhans")
                        .HasForeignKey("IdHocPhan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocPhan");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.MonHoc", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.Khoa", "Khoa")
                        .WithMany("MonHocs")
                        .HasForeignKey("IdKhoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.PhanCongGiangDay", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.GiangVien", "GiangVien")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("IdGiangVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLHocPhan_23TH0003.Models.LopHocPhan", "LopHocPhan")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("IdLopHocPhan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("LopHocPhan");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.SinhVien", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.Lop", "Lop")
                        .WithMany("SinhViens")
                        .HasForeignKey("IdLop")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.ThanhToanHocPhi", b =>
                {
                    b.HasOne("QLHocPhan_23TH0003.Models.HocKy", "HocKy")
                        .WithMany("ThanhToanHocPhis")
                        .HasForeignKey("HocKyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLHocPhan_23TH0003.Models.SinhVien", "SinhVien")
                        .WithMany("ThanhToanHocPhis")
                        .HasForeignKey("IdSinhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocKy");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.DangKyHocPhan", b =>
                {
                    b.Navigation("Diem");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.GiangVien", b =>
                {
                    b.Navigation("PhanCongGiangDays");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.HocKy", b =>
                {
                    b.Navigation("HocPhans");

                    b.Navigation("ThanhToanHocPhis");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.HocPhan", b =>
                {
                    b.Navigation("LopHocPhans");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Khoa", b =>
                {
                    b.Navigation("GiangViens");

                    b.Navigation("Lops");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.Lop", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.LopHocPhan", b =>
                {
                    b.Navigation("BaiHocs");

                    b.Navigation("DangKyHocPhans");

                    b.Navigation("PhanCongGiangDays");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.MonHoc", b =>
                {
                    b.Navigation("HocPhans");
                });

            modelBuilder.Entity("QLHocPhan_23TH0003.Models.SinhVien", b =>
                {
                    b.Navigation("DangKyHocPhans");

                    b.Navigation("ThanhToanHocPhis");
                });
#pragma warning restore 612, 618
        }
    }
}
