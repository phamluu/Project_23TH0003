@using Microsoft.AspNetCore.Identity
@using QLHocPhan_23TH0003.ViewModel
@model UserViewModel

@{
   if (User.Identity.Name == Model.UserName)
    {
        ViewBag.Title = "Quản lý tài khoản của tôi";
    }
    else
    ViewBag.Title = "Quản lý tài khoản của " + Model.UserName;
}
<h4 class="card-title title mb-4 text-center">@ViewBag.Title</h4>

@Html.Partial("_AlertMessages")

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label><strong>Tên đăng nhập:</strong></label>
            <span>@Model.UserName</span>
        </div>
        
        <div class="form-group">
            <label><strong>EmailConfirmed: </strong></label>
            <span>@Model.EmailConfirmed</span>
        </div>
        <div class="form-group">
            <label><strong>Số lần đăng nhập thất bại: </strong></label>
            <span>@Model.AccessFailedCount</span>
        </div>
        
        <div class="form-group">
            <label><strong>LockoutEnabled: </strong></label>
            <span>@Model.LockoutEnabled</span>
        </div>
        <div class="form-group">
            <label><strong>LockoutEnd: </strong></label>
            <span>@Model.LockoutEnd</span>
        </div>
        @if (Model.GiangVien != null)
        {
            <div class="form-group">
                <label><strong>Xem hồ sơ giảng viên: </strong></label>
                <a href="@Url.Action("Edit", "GiangVien_23TH0003", new { id = Model.GiangVien.Id })" class="btn btn-primary">Xem</a>
            </div>
        }
        @if (Model.SinhVien != null)
        {
            <div class="form-group">
                <label><strong>Xem hồ sơ sinh viên: </strong></label>
                <a href="@Url.Action("Edit", "SinhVien_23TH0003", new { id = Model.SinhVien.Id })" class="btn btn-primary">Xem</a>
            </div>
        }
        
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label><strong>Email: </strong></label>
            <span>@Model.Email</span>
            <a href="" class="btn btn-primary">Đổi Email</a>
        </div>
        <div class="form-group">
            <label><strong>Số điện thoại: </strong></label>
            <span>@Model.PhoneNumber</span>
            <a href="" class="btn btn-primary">Đổi số điện thoại</a>
        </div>
        <div class="form-group">
            <label><strong>Vai trò: </strong></label>
            <span>@(Model.Roles.Count == 0 ? "Chưa phân quyền" : string.Join(", ", Model.Roles) )</span>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#DoiVaiTro">Đổi vai trò</button>
        </div>
        <div class="form-group">
            <label><strong>Mật khẩu: </strong></label>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#TaoMatKhau">Tạo mật khẩu mới</button>
        </div>
    </div>
</div>

@{
    var userRoles = ViewBag.UserRoles as List<string>;
    var allRoles = ViewBag.AllRoles as List<IdentityRole>;
}
<div class="modal fade" id="DoiVaiTro" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title fs-5" id="exampleModalLabel">Đổi vai trò</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            
                <form action="@Url.Action("UpdateUserRoles", "User_23TH0003")" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <input type="hidden" name="email" value="@Model.Email" />
                    <div class="form-group">
                        <label>Vai trò người dùng:</label><br />
                        @foreach (var role in allRoles)
                        {
                            bool isCurrentUser = User.Identity.Name == Model.UserName;
                            bool isAdminRole = role.Name == "Admin";
                            bool isUserInRole = userRoles.Contains(role.Name);

                            if (isAdminRole && isCurrentUser)
                            {
                                <!-- Không cho phép bỏ chọn "Admin" nếu là chính mình -->
                                <label class="form-check-label mb-2" style="display: block">
                                    <input class="mr-2" type="checkbox"
                                           name="selectedRoles"
                                           value="@role.Name"
                                           checked
                                           disabled />@role.Name
                                </label>
                                <!-- Hidden field để server vẫn nhận được giá trị "Admin" -->
                                <input type="hidden" name="selectedRoles" value="Admin" />
                            }
                            else
                            {
                                <label class="form-check-label mb-2" style="display: block">
                                    <input class="mr-2" type="checkbox"
                                           name="selectedRoles"
                                           value="@role.Name"
                                           @(isUserInRole ? "checked" : "") />@role.Name
                                </label>
                            }
                        }
                    </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        </div>
                    </div>

                </form>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="TaoMatKhau" tabindex="-1" aria-labelledby="TaoMatKhauLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow rounded">
            <div class="modal-header">
                <h4 class="modal-title" id="TaoMatKhauLabel">Tạo mật khẩu mới</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>

            <form action="@Url.Action("TaoMatKhauMoi")" method="post" id="TaoMatKhau">
                @Html.AntiForgeryToken()
                <input type="hidden" name="userId" value="@Model.Id" />

                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label for="newPassword" class="form-label">Mật khẩu mới</label>
                        <div class="position-relative">
                            <input type="password" name="newPassword" id="newPassword" class="form-control" required minlength="6" />
                            <span class="toggle-password fa fa-eye position-absolute top-50 end-0 translate-middle-y me-3"
                                  data-target="newPassword"
                                  style="cursor: pointer; font-size: 1.1rem;"></span>
                        </div>
                        <small class="text-muted">Tối thiểu 6 ký tự, bao gồm chữ hoa, số hoặc ký tự đặc biệt.</small>
                    </div>

                    <div class="form-group mb-3">
                        <label for="confirmPassword" class="form-label">Xác nhận mật khẩu</label>
                        <div class="position-relative">
                            <input type="password" id="confirmPassword" class="form-control" required />
                            <span class="toggle-password fa fa-eye position-absolute top-50 end-0 translate-middle-y me-3"
                                  data-target="confirmPassword"
                                  style="cursor: pointer; font-size: 1.1rem;"></span>
                        </div>
                        <div class="text-danger mt-1" id="passwordMismatch" style="display:none;">Mật khẩu xác nhận không khớp.</div>
                    </div>

                    <div class="progress mb-2">
                        <div id="passwordStrengthBar" class="progress-bar" role="progressbar" style="width: 0%;"></div>
                    </div>
                    <small id="passwordStrengthText" class="form-text"></small>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Lưu mật khẩu</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </form>
        </div>
    </div>
</div>


@Html.Raw(@"
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.toggle-password').forEach(span => {
            span.addEventListener('click', function () {
                const targetId = this.getAttribute('data-target');
                const input = document.getElementById(targetId);

                if (input.type === 'password') {
                    input.type = 'text';
                    this.classList.remove('fa-eye');
                    this.classList.add('fa-eye-slash');
                } else {
                    input.type = 'password';
                    this.classList.remove('fa-eye-slash');
                    this.classList.add('fa-eye');
                }
            });
        });

        const newPassword = document.getElementById('newPassword');
        const confirmPassword = document.getElementById('confirmPassword');
        const mismatch = document.getElementById('passwordMismatch');

        if (confirmPassword && newPassword && mismatch) {
            confirmPassword.addEventListener('input', () => {
                mismatch.style.display = (confirmPassword.value !== newPassword.value) ? 'block' : 'none';
            });

            newPassword.addEventListener('input', () => {
                const pw = newPassword.value;
                const strength = getStrength(pw);

                const bar = document.getElementById('passwordStrengthBar');
                const text = document.getElementById('passwordStrengthText');

                if (bar && text) {
                    bar.style.width = strength.percent + '%';
                    bar.className = 'progress-bar ' + strength.color;
                    text.textContent = strength.message;
                }
            });
        }

        function getStrength(pw) {
            let score = 0;
            if (pw.length >= 6) score++;
            if (/[A-Z]/.test(pw)) score++;
            if (/\\d/.test(pw)) score++;
            if (/[@$!%*#?&]/.test(pw)) score++;

            switch (score) {
                case 1: return { percent: 25, color: 'bg-danger', message: 'Yếu' };
                case 2: return { percent: 50, color: 'bg-warning', message: 'Trung bình' };
                case 3: return { percent: 75, color: 'bg-info', message: 'Khá mạnh' };
                case 4: return { percent: 100, color: 'bg-success', message: 'Mạnh' };
                default: return { percent: 0, color: '', message: '' };
            }
        }
    });
</script>
")

